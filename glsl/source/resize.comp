#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
// layout (binding = 0, rgba8) uniform readonly image2D inTex;
// 借用sampler
layout (binding = 0) uniform sampler2D inSampler;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO {
    // 1
    int bLinear;
    // 0
    float fx;
    float fy;
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x || uv.y >= size.y){
        return;        
    }
    // float x = (uv.x+0.5)/size.x;
    // float y = (uv.y+0.5)/size.y;    
    // vec4 inColor = texture(inSampler, vec2(x,y));
    int ix = int(uv.x*ubo.fx);
    int iy = int(uv.y*ubo.fy);
    vec4 inColor = texelFetch(inSampler, ivec2(ix,iy),0);
    imageStore(outTex,uv,inColor);
}

// void nearest(){
//     ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
//     ivec2 size = imageSize(outTex);    
//     if(uv.x >= size.x || uv.y >= size.y){
//         return;
//     }    
//     int ix = int(uv.x*ubo.fx);
//     int iy = int(uv.y*ubo.fy);
//     imageStore(outTex,uv,imageLoad(inTex,ivec2(ix,iy)));
// }
// 
// void linear(){
//     ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
//     ivec2 size = imageSize(outTex); 
//     ivec2 inSize = imageSize(inTex);   
//     if(uv.x >= size.x || uv.y >= size.y){
//         return;
//     }    
//     vec4 rgba = vec4(0.0);
//     float inX = uv.x * ubo.fx;
//     float inY = uv.y * ubo.fy;
//     int x1 = int(inX);
//     int y1 = int(inY);
//     int x2 = x1+1;
//     int y2 = y1+1;
//     int x2_read = min(x2,inSize.x-1);
//     int y2_read = min(y2,inSize.y-1);
// 
//     vec4 src = imageLoad(inTex,ivec2(x1,y1));
//     rgba = rgba + src*((x2-inX)*(y2-inY));
// 
//     src = imageLoad(inTex,ivec2(x2_read,y1));
//     rgba = rgba + src*((inX- x1)*(y2-inY));
// 
//     src = imageLoad(inTex,ivec2(x1,y2_read));
//     rgba = rgba + src*((x2-inX)*(inY-y1));
// 
//     src = imageLoad(inTex,ivec2(x2_read,y2_read));
//     rgba = rgba + src*((inX- x1)*(inY-y1));   
// 
//     imageStore(outTex,uv,rgba); 
// }
// 
// void main(){
//     if(ubo.bLinear != 0){
//         linear();
//     }else{
//         nearest();
//     }
// }
#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize

layout (binding = 0, rgba8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO {
	float col00;
    float col01;
    float col02;
    float col10;
    float col11;
    float col12;
    float col20;
    float col21;
    float col22;
    // mat3 mat;
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);    
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    }
    mat3 mat = mat3(
        ubo.col00,ubo.col01,ubo.col02,
        ubo.col10,ubo.col11,ubo.col12,
        ubo.col20,ubo.col21,ubo.col22
    );
    vec4 sum = vec4(0.0f);    
    for(int i = 0; i< 3; ++i){
        for(int j= 0; j< 3; ++j){
            int x = uv.x-1+j;
            int y = uv.y-1+i;
            // REPLICATE border
            x = max(0,min(x,size.x-1));
            y = max(0,min(y,size.y-1));   
            if( mat[i][j] != 0.0f ){         
                vec4 rgba = imageLoad(inTex,ivec2(x,y));
                sum = sum + rgba * mat[i][j];
            }
        }
    }
    sum = clamp(sum,vec4(0.0),vec4(1.0));
    imageStore(outTex, uv, sum); 
}
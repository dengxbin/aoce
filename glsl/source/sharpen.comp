#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
layout (binding = 0, rgba8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO {
    int offset;
    float sharpness;
} ubo;

const ivec2 centerT[4] = {
    ivec2(1,0),
    ivec2(-1,0),
    ivec2(0,1),
    ivec2(0,-1)
};

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(inTex);
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    } 
    float centerMultiplier = 1.0 + 4.0*ubo.sharpness;
    float edgeMultiplier = ubo.sharpness;
    vec4 center = imageLoad(inTex,uv)*centerMultiplier;  
    float alpha = 0;
    vec4 sum = vec4(0);
    for(int i = 0; i < 4; i++){
        ivec2 cuv = uv + centerT[i]*ubo.offset;
        cuv.x = max(0,min(cuv.x,size.x-1));
        cuv.y = max(0,min(cuv.y,size.y-1));
        vec4 centColor = imageLoad(inTex,cuv);
        sum = sum + centColor*edgeMultiplier;
        alpha = centColor.w;
    }
    vec4 result = vec4(center.rgb - sum.rgb,alpha);
    imageStore(outTex,uv,result);
}
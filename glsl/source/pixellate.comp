#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
layout (binding = 0) uniform sampler2D inSampler;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO{
    float fractionalWidthOfPixel;
    float aspectRatio;    
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    } 
    vec2 suv = (vec2(uv)+vec2(0.5f))/vec2(size);

    vec2 sampleDivisor = vec2(ubo.fractionalWidthOfPixel, ubo.fractionalWidthOfPixel / ubo.aspectRatio);    
    vec2 samplePos = suv - mod(suv, sampleDivisor) + 0.5 * sampleDivisor;
    
    vec4 color = textureLod(inSampler,samplePos ,0);   
    imageStore(outTex,uv,color);
}
#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize

layout (binding = 0, r32f) uniform readonly image2D inTex;
layout (binding = 1, r8) uniform image2D outTex;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);    
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    }
    float sum = 0.0f;  
    float current = imageLoad(inTex,uv).r;  
    for(int i = 0; i< 3; ++i){
        for(int j= 0; j< 3; ++j){
            int x = uv.x - 1 + j;
            int y = uv.y - 1 + i;
            // REPLICATE border
            x = max(0,min(x,size.x-1));
            y = max(0,min(y,size.y-1));            
            float value = imageLoad(inTex,ivec2(x,y)).r;
            sum += value;
        }
    }    
    float sumTest = step(1.5, sum);
    float pixelTest = step(0.01, current);
    imageStore(outTex, uv, vec4(sumTest*pixelTest)); 
}
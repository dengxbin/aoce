#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
layout (binding = 0, rgba8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO {    
    float intensity;
    float col00;
    float col01;
    float col02;
    float col03;
    float col10;
    float col11;
    float col12;
    float col13;
    float col20;
    float col21;
    float col22;
    float col23;
    float col30;
    float col31;
    float col32;
    float col33;
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);    
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    }   
    mat4 colMat = mat4(
        ubo.col00,ubo.col01,ubo.col02,ubo.col03,
        ubo.col10,ubo.col11,ubo.col12,ubo.col13,
        ubo.col20,ubo.col21,ubo.col22,ubo.col23,
        ubo.col30,ubo.col31,ubo.col32,ubo.col33
    ); 
    vec4 color = imageLoad(inTex,uv);  
    vec4 ocolor = color * colMat;

    vec4 result = (ubo.intensity * ocolor) + ((1.0 - ubo.intensity) * color);
    imageStore(outTex,uv,result); 
}

#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
layout (binding = 0, rgba8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform readonly image2D inTex1;
layout (binding = 2, rgba8) uniform image2D outTex;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(inTex);
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    } 
    vec4 c2 = imageLoad(inTex,uv);  
    vec4 c1 = imageLoad(inTex1,uv); 
    vec4 outputColor;
       
    float a = c1.a + c2.a * (1.0 - c1.a);
    float alphaDivisor = a + step(a, 0.0); // Protect against a divide-by-zero blacking out things in the output

    outputColor.rgb = (c1.rgb * c1.a+ c2.rgb * c2.a * (1.0 - c1.a))/alphaDivisor;    
    outputColor.a = a;
    imageStore(outTex,uv,outputColor);     
}
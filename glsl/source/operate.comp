#version 450

layout (local_size_x = 16, local_size_y = 16) in;// gl_WorkGroupSize
layout (binding = 0, rgba8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform image2D outTex;

layout (std140, binding = 2) uniform UBO {
    // 0
    int red;
    // 1
    int green;
    // 2
    int blue;
    // 3
    int alpha;
    // 0
    int bFlipX;
    // 0
    int bFlipY;
    // 1.0
    float gamma;
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);    
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    }    
    int ix = uv.x;
    int iy = uv.y;
    if(ubo.bFlipX != 0){
        ix = size.x - 1 - ix;        
    }
    if(ubo.bFlipY != 0){
        iy = size.y - 1 - iy;
    }
    vec4 rgba = imageLoad(inTex,ivec2(ix,iy));
    float r = clamp(pow(rgba[ubo.red],ubo.gamma),0.0,1.0);
    float g = clamp(pow(rgba[ubo.green],ubo.gamma),0.0,1.0);
    float b = clamp(pow(rgba[ubo.blue],ubo.gamma),0.0,1.0);
    float a = clamp(pow(rgba[ubo.alpha],ubo.gamma),0.0,1.0);
    imageStore(outTex, uv,vec4(r,g,b,a)); 
}
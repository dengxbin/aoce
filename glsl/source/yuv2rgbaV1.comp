#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, r8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform image2D outTex;
layout (binding = 2) uniform UBO 
{
	int width;
	int height;
	int yuvType;
} ubo;

int u22u1(ivec2 uv, int step) {
	return uv.y * step + uv.x;
}

ivec2 u12u2(int index, int step) {
	ivec2 uv;
	uv.y = index / step;
	uv.x = index - uv.y*step;// % 花费高?
	return uv;
}

vec4 yuv2Rgb(float y, float u, float v, float a) {
	vec4 xrgba = vec4(0.f);
	xrgba.r = clamp(y + 1.402f * v, 0.f, 1.f);
	xrgba.g = clamp(y - 0.71414f * v - 0.34414f * u, 0.f, 1.f);
	xrgba.b = clamp(y + 1.772f * u, 0.f, 1.f);
	xrgba.a = a;
	return xrgba;
}

// yuv420sp
void nv12(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x/2 || uv.y >= size.y/2){
        return;
    }
	ivec2 nuv = ivec2(0,size.y);
	ivec2 uindex = ivec2(uv.x*2,uv.y)+nuv;
	ivec2 vindex = ivec2(uv.x*2+1,uv.y)+nuv;

	float y1 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2)).r;
	float y2 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2)).r;
	float y3 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2+1)).r;
	float y4 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2+1)).r;	
	float u = imageLoad(inTex,uindex.xy).r -0.5f;
    float v = imageLoad(inTex,vindex.xy).r -0.5f;

	vec4 rgba1 = yuv2Rgb(y1,u,v,1.f);
	vec4 rgba2 = yuv2Rgb(y2,u,v,1.f);
	vec4 rgba3 = yuv2Rgb(y3,u,v,1.f);
	vec4 rgba4 = yuv2Rgb(y4,u,v,1.f);	

	imageStore(outTex, ivec2(uv.x*2,uv.y*2),rgba1); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2),rgba2); 
	imageStore(outTex, ivec2(uv.x*2,uv.y*2+1),rgba3); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2+1),rgba4); 
}

void yuv420p(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x/2 || uv.y >= size.y/2){
        return;
    }
	ivec2 nuv = u12u2(u22u1(uv.xy, size.x/2), size.x);
	ivec2 uindex = nuv + ivec2(0,size.y);
	ivec2 vindex = nuv + ivec2(0,size.y*5/4);

	float y1 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2)).r;
	float y2 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2)).r;
	float y3 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2+1)).r;
	float y4 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2+1)).r;	
	float u = imageLoad(inTex,uindex.xy).r -0.5f;
    float v = imageLoad(inTex,vindex.xy).r -0.5f;

	vec4 rgba1 = yuv2Rgb(y1,u,v,1.f);
	vec4 rgba2 = yuv2Rgb(y2,u,v,1.f);
	vec4 rgba3 = yuv2Rgb(y3,u,v,1.f);
	vec4 rgba4 = yuv2Rgb(y4,u,v,1.f);	

	imageStore(outTex, ivec2(uv.x*2,uv.y*2),rgba1); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2),rgba2); 
	imageStore(outTex, ivec2(uv.x*2,uv.y*2+1),rgba3); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2+1),rgba4); 
}

void yuv422ap(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x/2 || uv.y >= size.y/2){
        return;
    }	
	ivec2 uindex = uv + ivec2(0,size.y);
	ivec2 vindex = uv + ivec2(0,size.y*3/2);
	ivec2 aindex1 = uv + ivec2(size.x/2,size.y);
	ivec2 aindex2 = uv + ivec2(size.x/2,size.y*3/2);

	float y1 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2)).r;
	float y2 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2)).r;
	float y3 = imageLoad(inTex,ivec2(uv.x*2,uv.y*2+1)).r;
	float y4 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y*2+1)).r;	
	float a1 = imageLoad(inTex,aindex1).r;	
	float a2 = imageLoad(inTex,aindex2).r;	
	float u = imageLoad(inTex,uindex.xy).r -0.5f;
    float v = imageLoad(inTex,vindex.xy).r -0.5f;

	vec4 rgba1 = yuv2Rgb(y1,u,v,a1);
	vec4 rgba2 = yuv2Rgb(y2,u,v,a1);
	vec4 rgba3 = yuv2Rgb(y3,u,v,a2);
	vec4 rgba4 = yuv2Rgb(y4,u,v,a2);	

	imageStore(outTex, ivec2(uv.x*2,uv.y*2),rgba1); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2),rgba2); 
	imageStore(outTex, ivec2(uv.x*2,uv.y*2+1),rgba3); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y*2+1),rgba4); 
}

void yuv422p(){
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x/2 || uv.y >= size.y){
        return;
    } 
	ivec2 nuv = u12u2(u22u1(uv.xy, size.x/2), size.x);
	ivec2 uindex = ivec2(0,size.y)+nuv;
	ivec2 vindex = ivec2(0,size.y*3/2)+nuv;

	float y1 = imageLoad(inTex,ivec2(uv.x*2,uv.y)).r;
	float y2 = imageLoad(inTex,ivec2(uv.x*2+1,uv.y)).r;
	float u = imageLoad(inTex,uindex.xy).r -0.5f;
    float v = imageLoad(inTex,vindex.xy).r -0.5f;

	vec4 rgba1 =yuv2Rgb(y1,u,v,1.f);
	vec4 rgba2 =yuv2Rgb(y2,u,v,1.f);

	imageStore(outTex, ivec2(uv.x*2,uv.y),rgba1); 
	imageStore(outTex, ivec2(uv.x*2+1,uv.y),rgba2); 
}

void main(){
	if(ubo.yuvType == 1){
		nv12();
	}else if(ubo.yuvType == 2){
		yuv420p();
	}else if(ubo.yuvType == 3){
		yuv422p();// yuv422p yuv422ap();
	}else if(ubo.yuvType == 0){
		yuv422ap();
	}
}

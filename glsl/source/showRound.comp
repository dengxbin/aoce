#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, r8) uniform readonly image2D inTex;
layout (binding = 1, rgba8) uniform readonly image2D inTex1;
layout (binding = 2, rgba8) uniform image2D outTex;
layout (std140, binding = 3) uniform UBO {
    float threshold;
    float radius; // 0.05f
} ubo;

void main(){
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outTex);
    if(uv.x >= size.x || uv.y >= size.y){
        return;
    }
    vec4 color = imageLoad(inTex1,uv);
    float alpha = imageLoad(inTex,uv).r; 
    if(alpha > threshold){
        
    }
    imageStore(outTex,uv,color); 
}